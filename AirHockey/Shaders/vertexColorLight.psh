
#version 400

uniform vec4 ambient;
uniform vec3 lightPositions[8];
uniform vec4 lightColors[8];
uniform float lightKs[8];
uniform float lightPs[8];

uniform int numLights;


varying vec4 ex_Color;
varying vec4 ex_Position;


void main() {
	vec3 worldFragPos = vec3(ex_Position.xy, 1);
	vec3 L = vec3(0, 0, 0);

	
	for (int i = 0; i < numLights; i++) {
		float dist = length(worldFragPos.xy - lightPositions[i].xy);
		float intensity = 1.0f / (lightKs[i] * pow(dist, lightPs[i]) + 1.0f);
		L += lightColors[i].rgb * intensity;
	}
	L += ambient.xyz;

	gl_FragColor = vec4(L * ex_Color.rbg, ex_Color.a);
}